basePath: /
definitions:
  backup.Response:
    properties:
      completedAt:
        type: string
      error:
        type: string
      projectUuid:
        type: string
      startedAt:
        type: string
      status:
        type: string
      uuid:
        type: string
    type: object
  container.CreateRequest:
    properties:
      description:
        type: string
      is_public:
        type: boolean
      max_file_size:
        type: integer
      name:
        type: string
      projectUUID:
        type: string
    type: object
  container.Response:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      isPublic:
        type: boolean
      maxFileSize:
        type: integer
      name:
        type: string
      projectUuid:
        type: string
      totalFiles:
        type: integer
      updatedAt:
        type: string
      updatedBy:
        type: string
      url:
        type: string
      uuid:
        type: string
    type: object
  database.ColumnResponse:
    properties:
      defaultValue:
        type: string
      foreign:
        type: boolean
      name:
        type: string
      notNull:
        type: boolean
      position:
        type: integer
      primary:
        type: boolean
      referenceColumn:
        type: string
      referenceTable:
        type: string
      type:
        type: string
      unique:
        type: boolean
    type: object
  database.CreateColumnRequest:
    type: object
  database.CreateFunctionRequest:
    properties:
      definition:
        type: string
      language:
        type: string
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/database.functionParameter'
        type: array
      projectUUID:
        type: string
      return_type:
        type: string
    type: object
  database.CreateIndexRequest:
    properties:
      columns:
        items:
          type: string
        type: array
      is_unique:
        type: boolean
      name:
        type: string
      projectUUID:
        type: string
    type: object
  database.CreateTableRequest:
    type: object
  database.FunctionResponse:
    properties:
      dataType:
        type: string
      definition:
        type: string
      language:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  database.RenameColumnRequest:
    properties:
      name:
        type: string
      projectUUID:
        type: string
    type: object
  database.RenameTableRequest:
    properties:
      name:
        type: string
      projectUUID:
        type: string
    type: object
  database.TableResponse:
    properties:
      estimatedRows:
        type: integer
      id:
        type: integer
      name:
        type: string
      schema:
        type: string
      totalSize:
        type: string
    type: object
  database.UploadTableRequest:
    type: object
  database.functionParameter:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  dto.DefaultRequestWithProjectHeader:
    properties:
      projectUUID:
        type: string
    type: object
  file.CreateRequest:
    properties:
      projectUUID:
        type: string
    type: object
  file.RenameRequest:
    properties:
      full_file_name:
        type: string
      projectUUID:
        type: string
    type: object
  file.Response:
    properties:
      containerUuid:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      fullFileName:
        type: string
      mimeType:
        type: string
      size:
        description: in KB
        type: integer
      updatedAt:
        type: string
      updatedBy:
        type: string
      uuid:
        type: string
    type: object
  form.CreateFormFieldsRequest:
    properties:
      fields:
        items:
          $ref: '#/definitions/form.FieldRequest'
        type: array
      projectUUID:
        type: string
    type: object
  form.CreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      projectUUID:
        type: string
    type: object
  form.CreateResponseRequest:
    properties:
      projectUUID:
        type: string
      response:
        additionalProperties: true
        type: object
    type: object
  form.FieldRequest:
    properties:
      date_format:
        description: fails if provided and field value doesn't match
        type: string
      default_value:
        type: string
      description:
        type: string
      end_date:
        type: string
      is_required:
        type: boolean
      label:
        description: required fields
        type: string
      max_length:
        type: integer
      max_value:
        type: integer
      min_length:
        description: all fields from this point are optional
        type: integer
      min_value:
        description: only applicable for number types
        type: integer
      options:
        description: Options for select/radio types
        type: string
      pattern:
        type: string
      start_date:
        description: only applicable for date types
        type: string
      type:
        type: string
    type: object
  form.FieldResponseApi:
    properties:
      createdAt:
        type: string
      dateFormat:
        type: string
      defaultValue:
        type: string
      description:
        type: string
      endDate:
        type: string
      formUuid:
        type: string
      isRequired:
        type: boolean
      label:
        type: string
      maxLength:
        type: integer
      maxValue:
        type: integer
      minLength:
        type: integer
      minValue:
        type: integer
      options:
        type: string
      pattern:
        type: string
      startDate:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      uuid:
        type: string
    type: object
  form.FieldResponseForAPI:
    properties:
      createdAt:
        type: string
      formFieldUuid:
        type: string
      formResponseUuid:
        type: string
      updatedAt:
        type: string
      uuid:
        type: string
      value:
        type: string
    type: object
  form.Response:
    properties:
      createdAt:
        type: string
      createdB:
        type: string
      description:
        type: string
      name:
        type: string
      projectUuid:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
      uuid:
        type: string
    type: object
  form.ResponseForAPI:
    properties:
      formUuid:
        type: string
      responses:
        items:
          $ref: '#/definitions/form.FieldResponseForAPI'
        type: array
      uuid:
        type: string
    type: object
  form.UpdateFormFieldRequest:
    properties:
      date_format:
        description: fails if provided and field value doesn't match
        type: string
      default_value:
        type: string
      description:
        type: string
      end_date:
        type: string
      is_required:
        type: boolean
      label:
        description: required fields
        type: string
      max_length:
        type: integer
      max_value:
        type: integer
      min_length:
        description: all fields from this point are optional
        type: integer
      min_value:
        description: only applicable for number types
        type: integer
      options:
        description: Options for select/radio types
        type: string
      pattern:
        type: string
      projectUUID:
        type: string
      start_date:
        description: only applicable for date types
        type: string
      type:
        type: string
    type: object
  logging.Response:
    properties:
      body:
        type: string
      createdAt:
        type: string
      endpoint:
        type: string
      ipAddress:
        type: string
      method:
        type: string
      params:
        type: string
      status:
        type: integer
      userAgent:
        type: string
      userUuid:
        type: string
      uuid:
        type: string
    type: object
  organization.CreateRequest:
    properties:
      name:
        type: string
    type: object
  organization.MemberCreateRequest:
    properties:
      user_id:
        type: string
    type: object
  organization.Response:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
      uuid:
        type: string
    type: object
  project.CreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      organization_uuid:
        type: string
      projectUUID:
        type: string
    type: object
  project.Response:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      dbName:
        type: string
      description:
        type: string
      name:
        type: string
      organizationUuid:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
      uuid:
        type: string
    type: object
  project.UpdateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      projectUUID:
        type: string
    type: object
  response.BadRequestErrorResponse:
    properties:
      content:
        example: "null"
        type: string
      errors:
        example:
        - Invalid input parameter
        items:
          type: string
        type: array
      success:
        example: false
        type: boolean
    type: object
  response.InternalServerErrorResponse:
    properties:
      content:
        example: "null"
        type: string
      errors:
        example:
        - Internal server error
        items:
          type: string
        type: array
      success:
        example: false
        type: boolean
    type: object
  response.Response:
    properties:
      content: {}
      errors:
        items:
          type: string
        type: array
      metadata: {}
      success:
        type: boolean
    type: object
  response.UnauthorizedErrorResponse:
    properties:
      content:
        example: "null"
        type: string
      errors:
        example:
        - Unauthorized access
        items:
          type: string
        type: array
      success:
        example: false
        type: boolean
    type: object
  response.UnprocessableErrorResponse:
    properties:
      content:
        example: "null"
        type: string
      errors:
        example:
        - Validation failed
        items:
          type: string
        type: array
      success:
        example: false
        type: boolean
    type: object
  setting.IndividualSetting:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  setting.Response:
    properties:
      createdAt:
        type: string
      defaultValue:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  setting.UpdateRequest:
    properties:
      settings:
        items:
          $ref: '#/definitions/setting.IndividualSetting'
        type: array
    type: object
  stat.Response:
    properties:
      createdAt:
        type: string
      databaseName:
        type: string
      id:
        type: integer
      indexSize:
        type: string
      tableCount:
        items:
          $ref: '#/definitions/stats.TableRowCount'
        type: array
      tableSize:
        items:
          $ref: '#/definitions/stats.TableSize'
        type: array
      totalSize:
        type: string
      unusedIndex:
        items:
          $ref: '#/definitions/stats.UnusedIndex'
        type: array
    type: object
  stats.TableRowCount:
    properties:
      estimatedRowCount:
        type: integer
      tableName:
        type: string
    type: object
  stats.TableSize:
    properties:
      tableName:
        type: string
      totalSize:
        type: string
    type: object
  stats.UnusedIndex:
    properties:
      indexName:
        type: string
      indexScans:
        type: integer
      indexSize:
        type: string
      tableName:
        type: string
    type: object
  user.CreateRequest:
    properties:
      bio:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  user.Response:
    properties:
      bio:
        type: string
      createdAt:
        type: string
      email:
        type: string
      organizationUuid:
        type: string
      roleId:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      uuid:
        type: string
    type: object
  user.UpdateRequest:
    properties:
      bio:
        type: string
    type: object
host: api.fluxend.app
info:
  contact:
    email: hello@fluxend.app
    name: API Support
    url: http://github.com/fluxend/fluxend
  description: Fluxend is backend as-a-service platform that allows you to build,
    deploy, and scale applications without managing infrastructure.
  title: Fluxend API
  version: "1.0"
paths:
  /admin/health:
    get:
      consumes:
      - application/json
      description: Check the health status of the system
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Health status
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content: {}
              type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Check system health
      tags:
      - Admin
  /admin/settings:
    get:
      consumes:
      - application/json
      description: Retrieve all settings for the application
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of indexes
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/setting.Response'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List settings
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update application settings
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Settings update request
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/setting.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Form updated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/setting.Response'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Update settings
      tags:
      - Admin
  /admin/settings/reset:
    put:
      consumes:
      - application/json
      description: Reset application settings
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Settings reset
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/setting.Response'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Reset settings
      tags:
      - Admin
  /backups:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all backups for the specified project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of backups
          schema:
            items:
              allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/backup.Response'
                    type: array
                type: object
            type: array
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List backups
      tags:
      - Backups
    post:
      consumes:
      - application/json
      description: Create a new backup
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Project UUID
        in: body
        name: backup
        required: true
        schema:
          $ref: '#/definitions/dto.DefaultRequestWithProjectHeader'
      produces:
      - application/json
      responses:
        "201":
          description: Backup created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/backup.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create backup
      tags:
      - Backups
  /backups/{backupUUID}:
    delete:
      consumes:
      - application/json
      description: Remove a backup from the project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Backup UUID
        in: path
        name: backupUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Backup deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete backup
      tags:
      - Backups
    get:
      consumes:
      - application/json
      description: Get details of a specific backup
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Backup UUID
        in: path
        name: backupUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/backup.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve backup
      tags:
      - Backups
  /containers:
    get:
      consumes:
      - application/json
      description: Retrieve a list of container in a specified project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field to sort by
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of container
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/container.Response'
                  type: array
              type: object
        "400":
          description: Invalid input response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Lists containers
      tags:
      - Containers
    post:
      consumes:
      - application/json
      description: Add a new container to a project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container details
        in: body
        name: container
        required: true
        schema:
          $ref: '#/definitions/container.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Container created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/container.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Invalid input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Creates container
      tags:
      - Containers
  /containers/{containerUUID}:
    delete:
      consumes:
      - application/json
      description: Remove a container from a project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Container deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Deletes container
      tags:
      - Containers
    get:
      consumes:
      - application/json
      description: Get details of a specific container
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Container details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/container.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Invalid input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieves container
      tags:
      - Containers
    put:
      consumes:
      - application/json
      description: Modify an existing containers details
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      - description: Container details
        in: body
        name: container
        required: true
        schema:
          $ref: '#/definitions/container.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Container updated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/container.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Updates container
      tags:
      - Containers
  /containers/{containerUUID}/files:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all files in a specific container
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field to sort by
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of files
          schema:
            items:
              allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/file.Response'
                    type: array
                type: object
            type: array
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List files
      tags:
      - Files
    post:
      consumes:
      - application/json
      description: Create a new file in a specific container
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      - description: File details
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/file.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: File details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/file.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create file
      tags:
      - Files
  /containers/{containerUUID}/files/{fileUUID}:
    delete:
      consumes:
      - application/json
      description: Permanently remove a specific file from a container
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      - description: File UUID
        in: path
        name: fileUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: File deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete file
      tags:
      - Files
    get:
      consumes:
      - application/json
      description: Get details of a specific file
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      - description: File UUID
        in: path
        name: fileUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/file.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve file
      tags:
      - Files
    put:
      consumes:
      - application/json
      description: Update the name of a specific file. In other words, moves the file
        to a new location.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Container UUID
        in: path
        name: containerUUID
        required: true
        type: string
      - description: File UUID
        in: path
        name: fileUUID
        required: true
        type: string
      - description: New file name
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/file.RenameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: File details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/file.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Rename file
      tags:
      - Files
  /forms:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all forms for the specified project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field to sort by
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of forms
          schema:
            items:
              allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/form.Response'
                    type: array
                type: object
            type: array
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List forms
      tags:
      - Forms
    post:
      consumes:
      - application/json
      description: Add a new form with a name and description
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Form name and description
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/form.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Form created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create form
      tags:
      - Forms
  /forms/{formUUID}:
    delete:
      consumes:
      - application/json
      description: Remove a form from the project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Form deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete form
      tags:
      - Forms
    get:
      consumes:
      - application/json
      description: Get details of a specific form
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Form details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve form
      tags:
      - Forms
    put:
      consumes:
      - application/json
      description: Update form details such as name and description
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Form name and description
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/form.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Form updated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Update form
      tags:
      - Forms
  /forms/{formUUID}/fields:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all fields in a specific form
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of fields
          schema:
            items:
              allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/form.FieldResponseApi'
                    type: array
                type: object
            type: array
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List fields
      tags:
      - Form Fields
    post:
      consumes:
      - application/json
      description: Add a new field to a form
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Field details
        in: body
        name: field
        required: true
        schema:
          $ref: '#/definitions/form.CreateFormFieldsRequest'
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Field created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.FieldResponseApi'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create field
      tags:
      - Form Fields
  /forms/{formUUID}/fields/{fieldUUID}:
    delete:
      consumes:
      - application/json
      description: Remove a specific field from the form
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Field UUID
        in: path
        name: fieldUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Field deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete field
      tags:
      - Form Fields
    get:
      consumes:
      - application/json
      description: Get details of a specific field
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Field UUID
        in: path
        name: fieldUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Field details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.FieldResponseApi'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve field
      tags:
      - Form Fields
    put:
      consumes:
      - application/json
      description: Update the details of an existing field
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Field details
        in: body
        name: field
        required: true
        schema:
          $ref: '#/definitions/form.UpdateFormFieldRequest'
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Field UUID
        in: path
        name: fieldUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Field updated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.FieldResponseApi'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Update field
      tags:
      - Form Fields
  /forms/{formUUID}/responses:
    get:
      consumes:
      - application/json
      description: Get all form responses for a specific form
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of form responses
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/form.ResponseForAPI'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List form responses
      tags:
      - Form Responses
    post:
      consumes:
      - application/json
      description: Store a new form response for a specific form
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Request body to create a new form response
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/form.CreateResponseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Form response details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.ResponseForAPI'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create form response
      tags:
      - Form Responses
  /forms/{formUUID}/responses/{formResponseUUID}:
    delete:
      consumes:
      - application/json
      description: Delete a specific form response
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Form Response UUID
        in: path
        name: formResponseUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Form response deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete form response
      tags:
      - Form Responses
    get:
      consumes:
      - application/json
      description: Get details of a specific form response
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Form UUID
        in: path
        name: formUUID
        required: true
        type: string
      - description: Form Response UUID
        in: path
        name: formResponseUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Form response details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/form.ResponseForAPI'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve form response
      tags:
      - Form Responses
  /functions/{schema}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all functions for the specified schema
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Schema to search under
        in: path
        name: schema
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of functions
          schema:
            items:
              allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/database.FunctionResponse'
                    type: array
                type: object
            type: array
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List functions
      tags:
      - Functions
    post:
      consumes:
      - application/json
      description: Add a new function for specific schema
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Function details
        in: body
        name: function
        required: true
        schema:
          $ref: '#/definitions/database.CreateFunctionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Function created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.FunctionResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create function
      tags:
      - Functions
  /functions/{schema}/{functionName}:
    delete:
      consumes:
      - application/json
      description: Remove a function from the schema
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Schema name
        in: path
        name: schema
        required: true
        type: string
      - description: Function name
        in: path
        name: functionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Form deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete function
      tags:
      - Functions
    get:
      consumes:
      - application/json
      description: Get details of a specific function
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Schema name
        in: path
        name: schema
        required: true
        type: string
      - description: Function name
        in: path
        name: functionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Function details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.FunctionResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve function
      tags:
      - Functions
  /organizations:
    get:
      consumes:
      - application/json
      description: Get all organizations
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field to sort by
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of organizations
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/organization.Response'
                  type: array
              type: object
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: List organizations
      tags:
      - Organizations
    post:
      consumes:
      - application/json
      description: Add a new organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization name
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/organization.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Organization created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/organization.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create organization
      tags:
      - Organizations
  /organizations/{organizationUUID}:
    delete:
      consumes:
      - application/json
      description: Remove an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Organization deleted
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Delete organization
      tags:
      - Organizations
    get:
      consumes:
      - application/json
      description: Get details of a specific organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Organization details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/organization.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve organization
      tags:
      - Organizations
    put:
      consumes:
      - application/json
      description: Modify an existing organization's details
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Updated organization details
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/organization.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Organization updated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/organization.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Update organization
      tags:
      - Organizations
  /organizations/{organizationUUID}/users:
    get:
      consumes:
      - application/json
      description: Get all users in an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/user.Response'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List organization members
      tags:
      - Organization Members
    post:
      consumes:
      - application/json
      description: Add a new user to an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: User ID JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/organization.MemberCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/user.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create organization member
      tags:
      - Organization Members
  /organizations/{organizationUUID}/users/{userUUID}:
    delete:
      consumes:
      - application/json
      description: Remove a user from an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User deleted
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete organization member
      tags:
      - Organization Members
  /projects:
    get:
      consumes:
      - application/json
      description: Get all projects for a specific organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization UUID
        in: query
        name: organizationUUID
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field to sort by
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of projects
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/project.Response'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List projects
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: Create a new project for a specific organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization UUID
        in: query
        name: organizationUUID
        required: true
        type: string
      - description: Project name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/project.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Project details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/project.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create project
      tags:
      - Projects
  /projects/{projectUUID}:
    delete:
      consumes:
      - application/json
      description: Remove a project from the organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project deleted
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Delete project
      tags:
      - Projects
    get:
      consumes:
      - application/json
      description: Get details of a specific project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/project.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve project
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Update a project for a specific organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Project name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/project.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Project details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/project.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Update project
      tags:
      - Projects
  /projects/{projectUUID}/logs:
    get:
      consumes:
      - application/json
      description: Get all logs
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Filter by user UUID
        in: query
        name: userUuid
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by HTTP method
        in: query
        name: method
        type: string
      - description: Filter by endpoint
        in: query
        name: endpoint
        type: string
      - description: Filter by IP address
        in: query
        name: ipAddress
        type: string
      - description: Filter after a unix timestamp
        in: query
        name: startTime
        type: string
      - description: Filter before a unix timestamp
        in: query
        name: endTime
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field to sort by
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of logs
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/logging.Response'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: ListLogs List all logs
      tags:
      - Projects
  /projects/{projectUUID}/openapi:
    get:
      consumes:
      - application/json
      description: Generate OpenAPI documentation for a project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: path
        name: projectUUID
        required: true
        type: string
      - description: Comma-separated list of tables to include in OpenAPI
        in: query
        name: tables
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OpenAPI documentation response
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: OpenAPI projects
      tags:
      - Projects
  /projects/{projectUUID}/stats:
    get:
      consumes:
      - application/json
      description: Get statistics for project
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: query
        name: projectUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Stats for project
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/stat.Response'
              type: object
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Retrieve project statistics
      tags:
      - Projects
  /tables:
    get:
      consumes:
      - application/json
      description: Retrieve a list of tables in a specified project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tables
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/database.TableResponse'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List tables
      tags:
      - Tables
    post:
      consumes:
      - application/json
      description: Define and create a new table within a specified project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Table definition JSON
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/database.CreateTableRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Table created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.TableResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create table
      tags:
      - Tables
  /tables/{fullTableName}/columns:
    get:
      consumes:
      - application/json
      description: Retrieve a list of columns in a specified table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of columns
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/database.ColumnResponse'
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List columns
      tags:
      - Columns
    patch:
      consumes:
      - application/json
      description: Update the data type of existing columns in a specified table and
        remove any columns not included in the request.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Full table name
        in: path
        name: fullTableName
        required: true
        type: string
      - description: Updated column definitions
        in: body
        name: columns
        required: true
        schema:
          $ref: '#/definitions/database.CreateColumnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Columns altered
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.ColumnResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Modify columns
      tags:
      - Columns
    post:
      consumes:
      - application/json
      description: Create new columns in a specified table within a project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Full table name
        in: path
        name: fullTableName
        required: true
        type: string
      - description: Columns JSON
        in: body
        name: columns
        required: true
        schema:
          $ref: '#/definitions/database.CreateColumnRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Columns created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.ColumnResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create column
      tags:
      - Columns
  /tables/{fullTableName}/columns/{columnName}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a specific column from a given table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Full table name
        in: path
        name: fullTableName
        required: true
        type: string
      - description: Column Name
        in: path
        name: column_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Column deleted successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Column not found
        "500":
          description: Internal server error
      summary: Delete column
      tags:
      - Columns
    put:
      consumes:
      - application/json
      description: Change the name of a specific column in a given table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Full table name
        in: path
        name: fullTableName
        required: true
        type: string
      - description: Existing Column Name
        in: path
        name: column_name
        required: true
        type: string
      - description: New column name JSON
        in: body
        name: new_name
        required: true
        schema:
          $ref: '#/definitions/database.RenameColumnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Column renamed
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Rename column
      tags:
      - Columns
  /tables/{tableUUID}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a specific table from a given project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Table deleted successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Table not found
        "500":
          description: Internal server error
      summary: Delete table
      tags:
      - Tables
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific table within a project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Table details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.TableResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Table not found
        "500":
          description: Internal server error
      summary: Retrieve table
      tags:
      - Tables
  /tables/{tableUUID}/duplicate:
    put:
      consumes:
      - application/json
      description: Create a copy of a specified table within a project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      - description: Duplicate table name JSON
        in: body
        name: new_name
        required: true
        schema:
          $ref: '#/definitions/database.RenameTableRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Table duplicated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.TableResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Duplicate table
      tags:
      - Tables
  /tables/{tableUUID}/indexes:
    get:
      consumes:
      - application/json
      description: Retrieve a list of indexes for a given table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of indexes
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  items: {}
                  type: array
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: List indexes
      tags:
      - Indexes
    post:
      consumes:
      - application/json
      description: Add an index to a specified table within a project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      - description: Index details JSON
        in: body
        name: index
        required: true
        schema:
          $ref: '#/definitions/database.CreateIndexRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Index created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content: {}
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Create index
      tags:
      - Indexes
  /tables/{tableUUID}/indexes/{indexName}:
    delete:
      consumes:
      - application/json
      description: Remove an existing index from a given table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      - description: Index Name
        in: path
        name: index_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Index deleted successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Index not found
        "500":
          description: Internal server error
      summary: Delete index
      tags:
      - Indexes
    get:
      consumes:
      - application/json
      description: Retrieve details for a specific index in a table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      - description: Index Name
        in: path
        name: index_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Index details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content: {}
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Index not found
        "500":
          description: Internal server error
      summary: Retrieve index
      tags:
      - Indexes
  /tables/{tableUUID}/rename:
    put:
      consumes:
      - application/json
      description: Change the name of a specific table within a project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Table UUID
        in: path
        name: tableUUID
        required: true
        type: string
      - description: New table name JSON
        in: body
        name: new_name
        required: true
        schema:
          $ref: '#/definitions/database.RenameTableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Table renamed
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.TableResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Rename table
      tags:
      - Tables
  /tables/upload:
    post:
      consumes:
      - Multipart/form-data
      description: Define and create a new table within a specified project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project UUID
        in: header
        name: X-Project
        required: true
        type: string
      - description: Table definition multipart/form-data
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/database.UploadTableRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Table created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/database.TableResponse'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Upload table
      tags:
      - Tables
  /users:
    post:
      consumes:
      - application/json
      description: Add a new user with a name, email, and password
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/user.Response'
              type: object
        "400":
          description: Invalid input
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Create user
      tags:
      - Users
  /users/{userUUID}:
    get:
      consumes:
      - application/json
      description: Get details of a specific user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/user.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Retrieve user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user's details such as name, email, and password
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User UUID
        in: path
        name: userUUID
        required: true
        type: string
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/user.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "422":
          description: Unprocessable input response
          schema:
            $ref: '#/definitions/response.UnprocessableErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Update user
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/user.Response'
              type: object
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Authenticate user
      tags:
      - Users
  /users/logout:
    post:
      consumes:
      - application/json
      description: Invalidate the JWT token to log out a user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User logged out
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/response.BadRequestErrorResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/response.UnauthorizedErrorResponse'
        "500":
          description: Internal server error response
          schema:
            $ref: '#/definitions/response.InternalServerErrorResponse'
      summary: Logout user
      tags:
      - Users
  /users/me:
    get:
      consumes:
      - application/json
      description: Get details of logged-in specific user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                content:
                  $ref: '#/definitions/user.Response'
              type: object
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Retrieve logged-in user
      tags:
      - Users
schemes:
- https
swagger: "2.0"
