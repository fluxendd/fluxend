// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/fluxend/fluxend",
            "email": "hello@fluxend.app"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/health": {
            "get": {
                "description": "Check the health status of the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Check system health",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {}
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/logs": {
            "get": {
                "description": "Get all logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "List logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by user UUID",
                        "name": "userUuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by HTTP method",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by endpoint",
                        "name": "endpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by IP address",
                        "name": "ipAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/response.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/logging.Response"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/settings": {
            "get": {
                "description": "Retrieve all settings for the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of indexes",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/setting.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update application settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Settings update request",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/setting.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/setting.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/settings/reset": {
            "put": {
                "description": "Reset application settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Reset settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings reset",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/setting.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/backups": {
            "get": {
                "description": "Retrieve a list of all backups for the specified project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Backups"
                ],
                "summary": "List backups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of backups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/response.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/backup.Response"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new backup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Backups"
                ],
                "summary": "Create backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Project UUID",
                        "name": "backup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DefaultRequestWithProjectHeader"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Backup created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/backup.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/backups/{backupUUID}": {
            "get": {
                "description": "Get details of a specific backup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Backups"
                ],
                "summary": "Retrieve backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Backup UUID",
                        "name": "backupUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/backup.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a backup from the project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Backups"
                ],
                "summary": "Delete backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Backup UUID",
                        "name": "backupUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Backup deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/containers/{containerUUID}/files": {
            "get": {
                "description": "Retrieve a list of all files in a specific container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "List files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/response.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/file.Response"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new file in a specific container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Create file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "File details",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/file.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/file.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/containers/{containerUUID}/files/{fileUUID}": {
            "get": {
                "description": "Get details of a specific file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Retrieve file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File UUID",
                        "name": "fileUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/file.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently remove a specific file from a container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Delete file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File UUID",
                        "name": "fileUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/containers/{containerUUID}/files/{fileUUID}/rename": {
            "put": {
                "description": "Update the name of a specific file. In other words, moves the file to a new location.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Rename file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File UUID",
                        "name": "fileUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New file name",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/file.RenameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/file.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms": {
            "get": {
                "description": "Retrieve a list of all forms for the specified project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "List forms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of forms",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/response.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/form.Response"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new form with a name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "Create form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Form name and description",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Form created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms/{formUUID}": {
            "get": {
                "description": "Get details of a specific form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "Retrieve form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update form details such as name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "Update form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Form name and description",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a form from the project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "Delete form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Form deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms/{formUUID}/fields": {
            "get": {
                "description": "Retrieve a list of all fields in a specific form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Fields"
                ],
                "summary": "List fields",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/response.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/form.FieldResponseApi"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new field to a form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Fields"
                ],
                "summary": "Create field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Field details",
                        "name": "field",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.CreateFormFieldsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Field created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.FieldResponseApi"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms/{formUUID}/fields/{fieldUUID}": {
            "get": {
                "description": "Get details of a specific field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Fields"
                ],
                "summary": "Retrieve field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field UUID",
                        "name": "fieldUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.FieldResponseApi"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Fields"
                ],
                "summary": "Update field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Field details",
                        "name": "field",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.UpdateFormFieldRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field UUID",
                        "name": "fieldUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.FieldResponseApi"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a specific field from the form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Fields"
                ],
                "summary": "Delete field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field UUID",
                        "name": "fieldUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Field deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms/{formUUID}/responses": {
            "get": {
                "description": "Get all form responses for a specific form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Responses"
                ],
                "summary": "List form responses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of form responses",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/form.ResponseForAPI"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new form response for a specific form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Responses"
                ],
                "summary": "Create form response",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body to create a new form response",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.CreateResponseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Form response details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.ResponseForAPI"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms/{formUUID}/responses/{formResponseUUID}": {
            "get": {
                "description": "Get details of a specific form response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Responses"
                ],
                "summary": "Retrieve form response",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form Response UUID",
                        "name": "formResponseUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form response details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/form.ResponseForAPI"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific form response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form Responses"
                ],
                "summary": "Delete form response",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form UUID",
                        "name": "formUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Form Response UUID",
                        "name": "formResponseUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Form response deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/functions/{schema}": {
            "get": {
                "description": "Retrieve a list of all functions for the specified schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Functions"
                ],
                "summary": "List functions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Schema to search under",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of functions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/response.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/database.FunctionResponse"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new function for specific schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Functions"
                ],
                "summary": "Create function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Function details",
                        "name": "function",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateFunctionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Function created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.FunctionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/functions/{schema}/{functionName}": {
            "get": {
                "description": "Get details of a specific function",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Functions"
                ],
                "summary": "Retrieve function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Function name",
                        "name": "functionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Function details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.FunctionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a function from the schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Functions"
                ],
                "summary": "Delete function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Function name",
                        "name": "functionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Form deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "description": "Get all organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "List organizations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organizations",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/organization.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "description": "Add a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Create organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Organization name",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Organization created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/organization.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationUUID}": {
            "get": {
                "description": "Get details of a specific organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Retrieve organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/organization.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify an existing organization's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated organization details",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/organization.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Organization deleted",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/organizations/{organizationUUID}/users": {
            "get": {
                "description": "Get all users in an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Members"
                ],
                "summary": "List organization members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new user to an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Members"
                ],
                "summary": "Create organization member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID JSON",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.MemberCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/user.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationUUID}/users/{userUUID}": {
            "delete": {
                "description": "Remove a user from an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Members"
                ],
                "summary": "Delete organization member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "description": "Get all projects for a specific organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "List projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization UUID",
                        "name": "organizationUUID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of projects",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project for a specific organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization UUID",
                        "name": "organizationUUID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Project name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/project.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{projectUUID}": {
            "get": {
                "description": "Get details of a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieve project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/project.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a project for a specific organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/project.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a project from the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{projectUUID}/stats": {
            "get": {
                "description": "Get statistics for project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieve project statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "projectUUID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stats for project",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/stat.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/storage": {
            "get": {
                "description": "Retrieve a list of container in a specified project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "List containers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of container",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/container.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new container to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Create container",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Container details",
                        "name": "container",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/container.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Container created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/container.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/storage/containers/{containerUUID}": {
            "get": {
                "description": "Get details of a specific container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Retrieve container",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Container details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/container.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify an existing container's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Update container",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Container details",
                        "name": "container",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/container.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Container updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/container.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a container from a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Delete container",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container UUID",
                        "name": "containerUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Container deleted"
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "description": "Retrieve a list of tables in a specified project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "List tables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tables",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.TableResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Define and create a new table within a specified project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "Create table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Table definition JSON",
                        "name": "table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateTableRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Table created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.TableResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tables/upload": {
            "post": {
                "description": "Define and create a new table within a specified project.",
                "consumes": [
                    "Multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "Upload table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Table definition multipart/form-data",
                        "name": "table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.UploadTableRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Table created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.TableResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tables/{fullTableName}/columns": {
            "get": {
                "description": "Retrieve a list of columns in a specified table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Columns"
                ],
                "summary": "List columns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of columns",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.ColumnResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Alter the data type of existing columns in a specified table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Columns"
                ],
                "summary": "Modify columns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full table name",
                        "name": "fullTableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated column definitions",
                        "name": "columns",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateColumnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Columns altered",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.ColumnResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new columns in a specified table within a project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Columns"
                ],
                "summary": "Create column",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full table name",
                        "name": "fullTableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Columns JSON",
                        "name": "columns",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateColumnRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Columns created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.ColumnResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tables/{fullTableName}/columns/{columnName}": {
            "put": {
                "description": "Change the name of a specific column in a given table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Columns"
                ],
                "summary": "Rename column",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full table name",
                        "name": "fullTableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Existing Column Name",
                        "name": "column_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New column name JSON",
                        "name": "new_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.RenameColumnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Column renamed",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently delete a specific column from a given table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Columns"
                ],
                "summary": "Delete column",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full table name",
                        "name": "fullTableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Column Name",
                        "name": "column_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Column deleted successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Column not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/tables/{tableUUID}": {
            "get": {
                "description": "Retrieve details of a specific table within a project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "Retrieve table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.TableResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "description": "Permanently delete a specific table from a given project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "Delete table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Table deleted successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/tables/{tableUUID}/duplicate": {
            "put": {
                "description": "Create a copy of a specified table within a project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "Duplicate table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Duplicate table name JSON",
                        "name": "new_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.RenameTableRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Table duplicated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.TableResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tables/{tableUUID}/indexes": {
            "get": {
                "description": "Retrieve a list of indexes for a given table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Indexes"
                ],
                "summary": "List indexes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of indexes",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add an index to a specified table within a project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Indexes"
                ],
                "summary": "Create index",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Index details JSON",
                        "name": "index",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateIndexRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Index created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {}
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tables/{tableUUID}/indexes/{indexName}": {
            "get": {
                "description": "Retrieve details for a specific index in a table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Indexes"
                ],
                "summary": "Retrieve index",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Index Name",
                        "name": "index_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Index details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {}
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Index not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "description": "Remove an existing index from a given table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Indexes"
                ],
                "summary": "Delete index",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Index Name",
                        "name": "index_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Index deleted successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Index not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/tables/{tableUUID}/rename": {
            "put": {
                "description": "Change the name of a specific table within a project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "summary": "Rename table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project UUID",
                        "name": "X-Project",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table UUID",
                        "name": "tableUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New table name JSON",
                        "name": "new_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.RenameTableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table renamed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/database.TableResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Add a new user with a name, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/user.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticate a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/user.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "description": "Invalidate the JWT token to log out a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged out",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get details of logged-in specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve logged-in user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/user.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/{userUUID}": {
            "get": {
                "description": "Get details of a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/user.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's details such as name, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "userUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/user.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "schema": {
                            "$ref": "#/definitions/response.UnauthorizedErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable input response",
                        "schema": {
                            "$ref": "#/definitions/response.UnprocessableErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "backup.Response": {
            "type": "object",
            "properties": {
                "completedAt": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "projectUuid": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "container.CreateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "max_file_size": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "container.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "maxFileSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "projectUuid": {
                    "type": "string"
                },
                "totalFiles": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "database.ColumnResponse": {
            "type": "object",
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "foreign": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notNull": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                },
                "primary": {
                    "type": "boolean"
                },
                "referenceColumn": {
                    "type": "string"
                },
                "referenceTable": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unique": {
                    "type": "boolean"
                }
            }
        },
        "database.CreateColumnRequest": {
            "type": "object"
        },
        "database.CreateFunctionRequest": {
            "type": "object",
            "properties": {
                "definition": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.functionParameter"
                    }
                },
                "projectUUID": {
                    "type": "string"
                },
                "return_type": {
                    "type": "string"
                }
            }
        },
        "database.CreateIndexRequest": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_unique": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "database.CreateTableRequest": {
            "type": "object"
        },
        "database.FunctionResponse": {
            "type": "object",
            "properties": {
                "dataType": {
                    "type": "string"
                },
                "definition": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "database.RenameColumnRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "database.RenameTableRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "database.TableResponse": {
            "type": "object",
            "properties": {
                "estimatedRows": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "totalSize": {
                    "type": "string"
                }
            }
        },
        "database.UploadTableRequest": {
            "type": "object"
        },
        "database.functionParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.DefaultRequestWithProjectHeader": {
            "type": "object",
            "properties": {
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "file.CreateRequest": {
            "type": "object",
            "properties": {
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "file.RenameRequest": {
            "type": "object",
            "properties": {
                "full_file_name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "file.Response": {
            "type": "object",
            "properties": {
                "containerUuid": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "fullFileName": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "size": {
                    "description": "in KB",
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "form.CreateFormFieldsRequest": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/form.FieldRequest"
                    }
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "form.CreateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "form.CreateResponseRequest": {
            "type": "object",
            "properties": {
                "projectUUID": {
                    "type": "string"
                },
                "response": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "form.FieldRequest": {
            "type": "object",
            "properties": {
                "date_format": {
                    "description": "fails if provided and field value doesn't match",
                    "type": "string"
                },
                "default_value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "is_required": {
                    "type": "boolean"
                },
                "label": {
                    "description": "required fields",
                    "type": "string"
                },
                "max_length": {
                    "type": "integer"
                },
                "max_value": {
                    "type": "integer"
                },
                "min_length": {
                    "description": "all fields from this point are optional",
                    "type": "integer"
                },
                "min_value": {
                    "description": "only applicable for number types",
                    "type": "integer"
                },
                "options": {
                    "description": "Options for select/radio types",
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "start_date": {
                    "description": "only applicable for date types",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "form.FieldResponseApi": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dateFormat": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "formUuid": {
                    "type": "string"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "maxLength": {
                    "type": "integer"
                },
                "maxValue": {
                    "type": "integer"
                },
                "minLength": {
                    "type": "integer"
                },
                "minValue": {
                    "type": "integer"
                },
                "options": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "form.FieldResponseForAPI": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "formFieldUuid": {
                    "type": "string"
                },
                "formResponseUuid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "form.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdB": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectUuid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "form.ResponseForAPI": {
            "type": "object",
            "properties": {
                "formUuid": {
                    "type": "string"
                },
                "responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/form.FieldResponseForAPI"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "form.UpdateFormFieldRequest": {
            "type": "object",
            "properties": {
                "date_format": {
                    "description": "fails if provided and field value doesn't match",
                    "type": "string"
                },
                "default_value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "is_required": {
                    "type": "boolean"
                },
                "label": {
                    "description": "required fields",
                    "type": "string"
                },
                "max_length": {
                    "type": "integer"
                },
                "max_value": {
                    "type": "integer"
                },
                "min_length": {
                    "description": "all fields from this point are optional",
                    "type": "integer"
                },
                "min_value": {
                    "description": "only applicable for number types",
                    "type": "integer"
                },
                "options": {
                    "description": "Options for select/radio types",
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                },
                "start_date": {
                    "description": "only applicable for date types",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "logging.Response": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "userAgent": {
                    "type": "string"
                },
                "userUuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "organization.CreateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "organization.MemberCreateRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "organization.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "project.CreateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_uuid": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "project.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "dbName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationUuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "project.UpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectUUID": {
                    "type": "string"
                }
            }
        },
        "response.BadRequestErrorResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "null"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Invalid input parameter"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "null"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Internal server error"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "content": {},
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.UnauthorizedErrorResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "null"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Unauthorized access"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.UnprocessableErrorResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "null"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Validation failed"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "setting.IndividualSetting": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "setting.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "setting.UpdateRequest": {
            "type": "object",
            "properties": {
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting.IndividualSetting"
                    }
                }
            }
        },
        "stat.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "indexSize": {
                    "type": "string"
                },
                "tableCount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stats.TableRowCount"
                    }
                },
                "tableSize": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stats.TableSize"
                    }
                },
                "totalSize": {
                    "type": "string"
                },
                "unusedIndex": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stats.UnusedIndex"
                    }
                }
            }
        },
        "stats.TableRowCount": {
            "type": "object",
            "properties": {
                "estimatedRowCount": {
                    "type": "integer"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "stats.TableSize": {
            "type": "object",
            "properties": {
                "tableName": {
                    "type": "string"
                },
                "totalSize": {
                    "type": "string"
                }
            }
        },
        "stats.UnusedIndex": {
            "type": "object",
            "properties": {
                "indexName": {
                    "type": "string"
                },
                "indexScans": {
                    "type": "integer"
                },
                "indexSize": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "user.CreateRequest": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.Response": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "organizationUuid": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "user.UpdateRequest": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.fluxend.app",
	BasePath:         "/",
	Schemes:          []string{"https"},
	Title:            "Fluxend API",
	Description:      "Fluxend is backend as-a-service platform that allows you to build, deploy, and scale applications without managing infrastructure.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
