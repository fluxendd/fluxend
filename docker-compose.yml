services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - fluxend_network
    depends_on:
      - fluxend_api
      - fluxend_frontend

  fluxend_db:
    image: postgres:latest
    container_name: fluxend_db
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - fluxend_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fluxend_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASE_USER:-postgres}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  fluxend_api:
    image: fluxend/api:latest
    container_name: fluxend_api
    restart: always
    environment:
      - APP_ENV=${APP_ENV}
      - DATABASE_HOST=fluxend_db
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_SSL_MODE=disable
    depends_on:
      fluxend_db:
        condition: service_healthy
    networks:
      - fluxend_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fluxend_api.rule=Host(`${API_SUB_DOMAIN}.${BASE_DOMAIN}`)"
      - "traefik.http.routers.fluxend_api.entrypoints=web"
      - "traefik.http.services.fluxend_api.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # TODO: Figure out a better way to handle this
      - ./.env:/app/.env:ro # Already reads host .env file

  fluxend_frontend:
    image: fluxend/frontend:latest
    container_name: fluxend_frontend
    restart: always
    environment:
      - VITE_FLX_INTERNAL_URL=${INTERNAL_URL}
    depends_on:
      - fluxend_api
    networks:
      - fluxend_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fluxend_frontend.rule=Host(`${CONSOLE_SUB_DOMAIN}.${BASE_DOMAIN}`)"
      - "traefik.http.routers.fluxend_frontend.entrypoints=web"
      - "traefik.http.services.fluxend_frontend.loadbalancer.server.port=3000"

networks:
  fluxend_network:
    name: fluxend_network
    driver: bridge

volumes:
  fluxend_db_data: